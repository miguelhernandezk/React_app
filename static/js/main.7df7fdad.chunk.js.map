{"version":3,"sources":["App/useToDos.js","App/useLocalStorage.js","ToDoCounter/index.js","ToDoSearch/index.js","ToDoList/index.js","ToDoItem/index.js","CreateToDoButton/index.js","Modal/index.js","ToDoForm/index.js","ToDosError/index.js","ToDosLoading/index.js","EmptyToDos/index.js","ToDoHeader/index.js","ChangeAlert/index.js","ChangeAlert/withStorageListener.js","App/index.js","index.js"],"names":["useToDos","_React$useState","React","useState","_React$useState2","Object","slicedToArray","openModal","setOpenModal","_useLocalStorage","itemName","initialValue","synchronizedItem","setSynchronizedItem","_React$useState3","_React$useState4","error","setError","_React$useState5","_React$useState6","loading","setLoading","_React$useState7","_React$useState8","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","synchronizeItem","useLocalStorage","toDos","saveToDos","synchronizeToDos","searchValue","setSearchValue","toDoStatus","setToDoStatus","completedToDos","filter","toDo","completed","length","totalToDos","searchedToDos","toDoText","text","toLowerCase","searchText","includes","completeToDo","toDoIndex","findIndex","newToDos","toConsumableArray","deleteToDo","splice","addToDo","push","ToDoCounter","_ref","react_default","a","createElement","Fragment","className","concat","ToDoSearch","placeholder","value","onChange","event","console","log","target","disabled","ToDoList","props","renderFunc","children","render","onError","onLoading","onEmptyToDos","onEmptySearchResults","map","ToDoItem","onClick","onComplete","index_esm","onDelete","CreateToDoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","ToDoForm","newToDoValue","setNewToDoValue","onSubmit","preventDefault","type","ToDosError","ToDosLoading","EmptyToDos","ToDoHeader","Children","toArray","child","cloneElement","WrappedComponent","ChangeAlertWithStorageListener","show","toggleShow","class","storageChange","setStorageChange","window","addEventListener","change","key","synchronize","App","_useToDos","ToDoCounter_ToDoCounter","ToDoSearch_ToDoSearch","ToDoList_ToDoList","ToDosError_ToDosError","ToDosLoading_ToDosLoading","EmptyToDos_EmptyToDos","ToDoItem_ToDoItem","Modal_Modal","ToDoForm_ToDoForm","CreateToDoButton_CreateToDoButton","createRoot","src_App"],"mappings":"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","file":"static/js/main.7df7fdad.chunk.js","sourcesContent":["import React from \"react\";\nimport {useLocalStorage} from \"./useLocalStorage.js\"\n\n\nfunction useToDos(){\n    const [openModal, setOpenModal] = React.useState(false);\n    const {\n        item: toDos,\n        saveItem: saveToDos,\n        synchronizeItem: synchronizeToDos,\n        loading, \n        error\n    } = useLocalStorage(\"TODOS_V1\", []);\n    const [searchValue, setSearchValue] = React.useState(\"\");\n    const [toDoStatus, setToDoStatus] = React.useState(false);\n\n    const completedToDos = toDos.filter(toDo => !!toDo.completed).length;\n    const totalToDos = toDos.length;\n\n    let searchedToDos = [];\n\n    if (!searchValue.length >= 1){\n        searchedToDos = toDos\n    }else{\n        searchedToDos = toDos.filter(toDo => {\n        const toDoText = toDo.text.toLowerCase();\n        const searchText = searchValue.toLowerCase();\n        return toDoText.includes(searchText);\n    })\n    }\n\n    const completeToDo = (text) => {\n        const toDoIndex = toDos.findIndex(toDo => toDo.text === text);\n\n        const newToDos = [...toDos];\n        newToDos[toDoIndex].completed = toDoStatus;\n        setToDoStatus(!toDoStatus);\n        saveToDos(newToDos);\n    };\n\n    const deleteToDo = (text) => {\n        const toDoIndex = toDos.findIndex(toDo => toDo.text === text);\n\n        const newToDos = [...toDos];\n        newToDos.splice(toDoIndex, 1);\n        saveToDos(newToDos);\n    };\n\n    const addToDo = (text) => {\n        const newToDos = [...toDos];\n        newToDos.push({\n            completed: false,\n            text,\n        });\n        saveToDos(newToDos);\n    };\n\n\n    return (\n        {\n            loading,\n            error,\n            totalToDos,\n            completedToDos,\n            searchValue,\n            setSearchValue,\n            searchedToDos,\n            completeToDo,\n            deleteToDo,\n            addToDo,\n            openModal,\n            setOpenModal,\n            synchronizeToDos,\n        }\n    );\n}\n\nexport { useToDos }; ","import React from \"react\";\n\nfunction useLocalStorage(itemName, initialValue){\n    const [synchronizedItem, setSynchronizedItem] = React.useState(true);\n    const [error, setError] = React.useState(false);\n    const [loading, setLoading] = React.useState(true);\n    const [item, setItem] = React.useState(initialValue);\n  \n    React.useEffect(() => {\n      setTimeout(() => {\n        try{\n          const localStorageItem = localStorage.getItem(itemName);\n          let parsedItem;\n  \n          if(!localStorageItem){\n            localStorage.setItem(itemName, JSON.stringify(initialValue));\n            parsedItem = initialValue;\n          }else{\n            parsedItem = JSON.parse(localStorageItem);\n          }\n  \n          setItem(parsedItem);\n          setLoading(false);\n          setSynchronizedItem(true);\n        }catch(error){\n          setError(true);\n        }\n      }, 3000);\n    }, [synchronizedItem]);\n  \n  \n    const saveItem =  (newItem) => {\n      try{\n        const stringifiedItem = JSON.stringify(newItem);\n        localStorage.setItem(itemName, stringifiedItem);\n        setItem(newItem);\n      }catch(error){\n        setError(true);\n      }\n    }\n\n    const synchronizeItem = () => {\n      setLoading(true);\n      setSynchronizedItem(false);\n    }\n\n    return {\n      item,\n      saveItem,\n      loading, \n      error, \n      synchronizeItem,\n    };\n  }\n\n  export {useLocalStorage};","import React from \"react\";\nimport \"./ToDoCounter.css\";\n\nfunction ToDoCounter({ totalToDos, completedToDos, loading }){\n    return(\n        <React.Fragment>\n            <h2 className={`ToDoCounter headCounter ${!!loading && \"ToDoCounter--loading\"}`}>Your tasks</h2>\n            <h3 className={`ToDoCounter subCounter ${!!loading && \"ToDoCounter--loading\"}`}>{completedToDos} out of {totalToDos} tasks completed.</h3>\n        </React.Fragment>\n    );\n\n}\n\nexport { ToDoCounter };","import React from \"react\";\nimport \"./ToDoSearch.css\";\n\nfunction ToDoSearch({ searchValue, setSearchValue, loading }){\n    const onSearchValueChange = (event) => {\n        console.log(event.target.value);\n        setSearchValue(event.target.value);\n    };\n    return(\n        <input\n            className=\"ToDoSearch\"\n            placeholder=\"Filter ToDo's\" \n            value={searchValue} \n            onChange={onSearchValueChange}\n            disabled = {loading}\n        />\n            \n    );\n}\n\nexport { ToDoSearch };","import React from \"react\";\nimport \"./ToDoList.css\";\n\nfunction ToDoList(props){\n    const renderFunc = props.children || props.render\n    return(\n        <section className=\"ToDoList-container\">\n            {props.error && props.onError()}\n            {props.loading && props.onLoading()}\n            {(!props.loading && !props.totalToDos) && props.onEmptyToDos()}\n\n            {(!!props.totalToDos && !props.searchedToDos.length) && props.onEmptySearchResults(props.searchText)}\n\n            {(!props.loading && !props.error) && props.searchedToDos.map(renderFunc)}\n        </section>\n    );\n}\n\nexport { ToDoList };","import React from \"react\";\nimport { FaRegCheckCircle, FaTimes } from \"react-icons/fa\";\nimport \"./ToDoItem.css\";\n\n\nfunction ToDoItem(props){\n\n    return(\n        <li className=\"ToDoItem\">\n        <span className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`} onClick={props.onComplete}>\n            <FaRegCheckCircle/>\n        </span>\n        <p className={`ToDoItem-p ${props.completed && 'ToDoItem-p--complete'}`}>\n            {props.text}\n        </p>\n        <span className=\"Icon Icon-delete\" onClick={props.onDelete}>\n            <FaTimes/>\n        </span>\n        </li>\n    );\n}\n\nexport { ToDoItem };","import React from \"react\";\nimport \"./CreateToDoButton.css\";\n\nfunction CreateToDoButton(props){\n    const onClickButton = () => {\n        props.setOpenModal(prevState => !prevState);\n    };\n    return(\n        <button className=\"CreateToDoButton\" onClick={onClickButton}>+</button>\n    );\n}\n\nexport { CreateToDoButton };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./Modal.css\"\n\n\nfunction Modal({children}){\n    return ReactDOM.createPortal(\n        <div className=\"ModalBackground\">\n            {children}\n        </div>,\n        document.getElementById(\"modal\")\n    );\n}\n\nexport { Modal };","import React from \"react\";\nimport \"./ToDoForm.css\"\n\nfunction ToDoForm({ addToDo, setOpenModal }){\n    const [newToDoValue, setNewToDoValue] = React.useState(\"\");\n\n\n    const onCancel = () => {\n        setOpenModal(false);\n    };\n\n    const onChange = (event) => {\n        setNewToDoValue(event.target.value);\n        console.log(event.target.value);\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        console.log(newToDoValue);\n        addToDo(newToDoValue);\n        setOpenModal(false);\n    };\n\n    return (\n        <form onSubmit={onSubmit}>\n            <label>Enter your new task:</label>\n            <textarea \n                value={newToDoValue}\n                onChange={onChange}\n                placeholder=\"Learn Redux on Platzi\"\n            />\n            <div className=\"TodoForm-buttonContainer\">\n                <button \n                    type=\"button\"\n                    className=\"TodoForm-button TodoForm-button--cancel\"\n                    onClick={onCancel}>\n                        Cancel\n                </button>\n                <button \n                    type=\"submit\"\n                    className=\"TodoForm-button TodoForm-button--add\"\n                    onClick={onSubmit}>\n                        Add\n                </button>\n            </div>\n\n        </form>\n\n    );\n}\n\nexport {ToDoForm};","import React from \"react\";\nimport { FaSadCry } from \"react-icons/fa\";\nimport \"./ToDosError.css\"\n\nfunction ToDosError({error}){\n    return (\n        <li className=\"ToDosError\">\n                <span className=\"errorIcon\"><FaSadCry/></span>\n                <h2>Sorry! It's not you, it's us</h2>\n                <p>Please reload page.</p>\n        </li>\n    );\n}\n\nexport { ToDosError };","import React from \"react\";\nimport \"./ToDosLoading.css\";\n\nfunction ToDosLoading({error}){\n    return (\n        <div className=\"LoadingToDo-container\">\n            <span className=\"LoadingToDo-completeIcon\"></span>\n            <p className=\"LoadingToDo-text\">working</p>\n            <span className=\"LoadingToDo-deleteIcon\"></span>\n        </div>\n    );\n}\n\nexport { ToDosLoading };","import React from \"react\";\nimport { FaPlusCircle, FaRegListAlt } from \"react-icons/fa\";\nimport \"./EmptyToDos.css\";\n\nfunction EmptyToDos({error}){\n    return(\n            <li className=\"EmptyToDos\">\n                <span className=\"emptyIcon\"><FaRegListAlt/></span>\n                <h2>Wow! It seems you're done for today.</h2>\n                <p>Hit the <span className=\"miniAddButton\"><FaPlusCircle/></span> button to add a new task</p>\n            </li>\n    );\n}\n\nexport { EmptyToDos };","import React from \"react\";\n\nfunction ToDoHeader({ children, loading }){\n     \n    return(\n        <header>\n            {\n                React.Children\n                    .toArray(children)\n                    .map(child => React.cloneElement(child, {loading }))\n            }\n        </header>\n    );\n}\n\nexport { ToDoHeader };","import React from \"react\";\nimport { withStorageListener } from \"./withStorageListener\";\nimport \"./ChangeAlert.css\"\n\nfunction ChangeAlert({show, toggleShow}){\n    if(show){\n        return(\n            <div class=\"ChangeAlert-container\">\n                <div className=\"ChangeAlert\">\n                    <p>Changes detected</p>\n                    <button\n                        onClick={() => toggleShow(false)}\n                    >\n                    Reload info\n                    </button>\n                </div>\n            </div>\n        );\n    } else{\n        return null;\n    }\n}\n\nconst ChangeAlertWithStorageListener = withStorageListener(ChangeAlert);\n\nexport { ChangeAlertWithStorageListener }","import React from \"react\";\n\nfunction withStorageListener(WrappedComponent){\n    return function WrappedComponentWithStorageListener(props){\n        const[storageChange, setStorageChange] = React.useState(false);\n        window.addEventListener(\"storage\", (change) => {\n            if (change.key=== \"TODOS_V1\"){\n                console.log(\"Changes detected on TODOS_V1\");\n                setStorageChange(true);\n            }\n        });\n        \n        const toggleShow = () => {\n            props.synchronize();\n            setStorageChange(false);\n        };\n\n        return(\n            <WrappedComponent \n                show={storageChange}\n                toggleShow={toggleShow}\n            />\n        );\n    }\n}\n\nexport { withStorageListener };","import React from \"react\";\nimport { useToDos } from \"./useToDos\"\nimport { ToDoCounter } from \"../ToDoCounter\";\nimport { ToDoSearch } from \"../ToDoSearch\";\nimport { ToDoList } from \"../ToDoList\";\nimport { ToDoItem } from \"../ToDoItem\";\nimport { CreateToDoButton } from \"../CreateToDoButton\";\nimport { Modal } from \"../Modal\"\nimport { ToDoForm } from \"../ToDoForm\"\nimport { ToDosError } from \"../ToDosError\";\nimport { ToDosLoading } from \"../ToDosLoading\";\nimport { EmptyToDos } from \"../EmptyToDos\";\nimport { ToDoHeader } from \"../ToDoHeader\";\nimport { ChangeAlertWithStorageListener } from \"../ChangeAlert\";\n\n// import './App.css';\n\nfunction App() {\n  const { error,\n    loading,\n    searchedToDos, \n    completeToDo, \n    deleteToDo,\n    openModal,\n    setOpenModal,\n    totalToDos, \n    completedToDos,\n    searchValue, \n    setSearchValue,\n    addToDo, \n    synchronizeToDos,\n} = useToDos();\nreturn(\n  <React.Fragment>\n    <ToDoHeader loading={loading}>\n      <ToDoCounter\n        totalToDos = { totalToDos }\n        completedToDos = { completedToDos }\n      />\n      <ToDoSearch\n        searchValue = { searchValue }\n        setSearchValue = { setSearchValue }\n      />\n    </ToDoHeader>\n\n    <ToDoList\n      error={ error }\n      loading = { loading }\n      searchedToDos = { searchedToDos }\n      searchText = { searchValue }\n      totalToDos = {totalToDos}\n      onError={() => <ToDosError/>}\n      onLoading={() => <ToDosLoading/>}\n      onEmptyToDos={() => <EmptyToDos/>}\n      onEmptySearchResults={(searchText) => <p>No hay resultados para {searchText}</p>}\n    >\n      {toDo => (\n        <ToDoItem\n          key={toDo.text} \n          text={toDo.text} \n          completed={toDo.completed} \n          onComplete={() => completeToDo(toDo.text)}\n          onDelete={() => deleteToDo(toDo.text)}\n        />\n      )}\n    </ToDoList>\n\n      {!!openModal && (\n        <Modal>\n          <ToDoForm \n            addToDo = { addToDo }\n            setOpenModal = { setOpenModal }\n          />\n        </Modal>\n      )}\n    <CreateToDoButton\n      setOpenModal={setOpenModal}\n    />\n    <ChangeAlertWithStorageListener\n      synchronize = { synchronizeToDos }\n    />\n\n  </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App/index.js'; \n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />,\n);\n\n// const modal = ReactDOM.createRoot(document.getElementById('modal'));\n// modal.createPortal{\n\n// }\n"],"sourceRoot":""}